// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package env

import (
	"github.com/google/wire"
	"github.com/jayp0521/Translate/utils"
	"os"
)

// Injectors from wire.go:

func InjectEnvLoad() EnvLoad {
	sugaredLogger := utils.ProvideLogger()
	envEnvSecret := provideEnvSecret()
	envEnvFileName := provideEnvFileName()
	envLoad := EnvLoad{
		log:      sugaredLogger,
		secret:   envEnvSecret,
		fileName: envEnvFileName,
	}
	return envLoad
}

// wire.go:

var superset = wire.NewSet(utils.SuperSet)

var SuperSet = wire.NewSet(
	InjectEnvLoad, wire.Bind(new(EnvLoader), new(EnvLoad)),
)

func provideEnvSecret() envSecret {
	secret := os.Getenv("TRANSLATE_KEY")
	if len(secret) == 0 {
		panic("TRANSLATE_KEY is not defined!")
	}
	return envSecret(secret)
}

func provideEnvFileName() envFileName {
	envEnv := os.Getenv("ENV")
	switch envEnv {
	case "PROD":
		return envFileName(".env.production")
	default:
		return envFileName(".env.production")

	}
}
